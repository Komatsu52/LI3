#BlueJ class context
comment0.target=IFilialAux
comment0.text=\n\ IFilialAux\ -\ interface\ das\ classes\ filial\n\ \n\ @author\ (Ana\ Rita\ Rosendo,\ Goncalo\ Esteves,\ Rui\ Oliveira)\ \n\ @version\ 3\ de\ maio\ de\ 2019\n
comment1.params=
comment1.target=IProduto\ getCodProd()
comment1.text=\n\ Metodo\ que\ devolve\ o\ codigo\ de\ produto\ da\ filial\n\n\ @return\ \ \ \ \ \ \ \ o\ codigo\ do\ produto\ \n
comment10.params=tipo
comment10.target=void\ setTipo(java.lang.String)
comment10.text=\n\ Metodo\ que\ altera\ o\ tipo\ da\ filial\n\n\ @param\ \ \ tipo\ \ \ \ \ o\ tipo\n
comment11.params=codigo
comment11.target=void\ setCodCli(ICliente)
comment11.text=\n\ Metodo\ que\ altera\ o\ codigo\ de\ cliente\ da\ filial\n\n\ @param\ \ \ \ codigo\ \ \ \ o\ codigo\ do\ cliente\ \n
comment12.params=mes
comment12.target=void\ setMes(int)
comment12.text=\n\ Metodo\ que\ altera\ o\ mes\ da\ filial\n\n\ @param\ \ mes\ \ \ \ \ o\ mes\ da\ filial\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\n\ Metodo\ que\ converte\ uma\ filial\ numa\ string\n\ \n\ @return\ a\ filial\ convertida\n
comment14.params=o
comment14.target=boolean\ equals(java.lang.Object)
comment14.text=\n\ Metodo\ que\ verifica\ se\ duas\ filials\ sao\ iguais\n\ \n\ @param\ \ o\ \ \ o\ objeto\n\ @return\ o\ resultado\ da\ comparacao\n
comment15.params=
comment15.target=IFilialAux\ clone()
comment15.text=\n\ Metodo\ que\ duplica\ uma\ filial\n\ \n\ @return\ o\ clone\n
comment16.params=
comment16.target=int\ hashcode()
comment16.text=\n\ Metodo\ que\ calcula\ o\ hashcode\ de\ uma\ filial\n\ \n\ @return\ o\ hashcode\n
comment17.params=p\ x
comment17.target=boolean\ contemProduto(IProduto,\ java.util.List)
comment17.text=\n\ Metodo\ que\ verifica\ se\ uma\ lista\ de\ Filiais\ tem\ algum\ Produto\ igual\ a\ p\n\ \n\ @param\ \ \ p\ \ \ Produto\ a\ verificar\n\ @param\ \ \ x\ \ \ Lista\ de\ Filiais\n\ \n\ @return\ \ true\ caso\ tenha,\ false\ caso\ contrario\n
comment18.params=c\ x
comment18.target=boolean\ contemCliente(ICliente,\ java.util.List)
comment18.text=\n\ Metodo\ que\ verifica\ se\ uma\ lista\ de\ Filiais\ tem\ algum\ Cliente\ igual\ a\ c\n\ \n\ @param\ \ \ p\ \ \ Produto\ a\ verificar\n\ @param\ \ \ x\ \ \ Lista\ de\ Filiais\n\ \n\ @return\ \ true\ caso\ tenha,\ false\ caso\ contrario\n
comment19.params=p\ x
comment19.target=java.util.List\ produtosIguais(IProduto,\ java.util.List)
comment19.text=\n\ Metodo\ que\ devolve\ uma\ lista\ de\ Filiais\ so\ com\ produtos\ iguais\n\ \n\ @param\ \ \ p\ \ \ Produto\ a\ verificar\n\ @param\ \ \ x\ \ \ Lista\ de\ Filiais\n\ \n\ @return\ \ lista\ de\ Filiais\n
comment2.params=
comment2.target=double\ getPreco()
comment2.text=\n\ Metodo\ que\ devolve\ preco\ unitario\ de\ cada\ produto\ da\ filial\n\n\ @return\ \ \ \ \ \ \ \ o\ preco\n
comment3.params=
comment3.target=int\ getQuantidade()
comment3.text=\n\ Metodo\ que\ devolve\ a\ quantidade\ de\ produtos\ da\ filial\n\n\ @return\ \ \ \ \ \ \ \ o\ codigo\ do\ produto\ \n
comment4.params=
comment4.target=java.lang.String\ getTipo()
comment4.text=\n\ Metodo\ que\ devolve\ o\ tipo\ da\ filial\n\n\ @return\ \ \ \ \ \ \ \ o\ tipo\n
comment5.params=
comment5.target=ICliente\ getCodCli()
comment5.text=\n\ Metodo\ que\ devolve\ o\ codigo\ de\ cliente\ da\ filial\n\n\ @return\ \ \ \ \ \ \ \ o\ codigo\ do\ cliente\n
comment6.params=
comment6.target=int\ getMes()
comment6.text=\n\ Metodo\ que\ devolve\ o\ mes\ da\ filial\n\n\ @return\ \ \ \ \ \ \ \ o\ mes\n
comment7.params=codigo
comment7.target=void\ setCodProd(IProduto)
comment7.text=\n\ Metodo\ que\ altera\ o\ codigo\ de\ produto\ da\ filial\n\n\ @param\ \ codigo\ \ \ \ \ \ o\ codigo\ do\ produto\ \n
comment8.params=preco
comment8.target=void\ setPreco(java.lang.Double)
comment8.text=\n\ Metodo\ que\ altera\ o\ preco\ da\ filial\n\n\ @param\ \ \ preco\ \ \ \ \ o\ preco\n
comment9.params=quantos
comment9.target=void\ setQuantidade(int)
comment9.text=\n\ Metodo\ que\ altera\ a\ quantidade\ da\ filial\n\n\ @param\ \ quantos\ \ \ \ \ a\ quantidade\ da\ filial\n
numComments=20
