#BlueJ class context
comment0.target=Filial
comment0.text=\n\ Write\ a\ description\ of\ class\ Filiais\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=Filial()
comment1.text=\n\ Construtor\ para\ objetos\ da\ classe\ Filial\ (por\ omissao)\n
comment10.params=x
comment10.target=java.util.List\ clonar(java.util.List)
comment10.text=\n\ Metodo\ que\ duplica\ uma\ Lista\ de\ Filiais\n\ \n\ @param\ \ \ x\ \ \ Lista\ de\ Filiais\n\ \n\ @return\ \ \ o\ clone\ da\ lista\n
comment11.params=key\ value
comment11.target=void\ addValues(ICliente,\ IFilialAux)
comment11.text=\n\ Metodo\ que\ insere\ uma\ Filial\ numa\ Arvore\ de\ Filiais\n\ \n\ @param\ \ \ filiais\ \ \ \ Arvore\ de\ Filiais\n\ @param\ \ \ key\ \ \ \ \ Chave\ da\ fatura\ a\ inserir\n\ @param\ \ \ value\ \ \ Filial\ a\ inserir\n\ \n\ @return\ \ IFilialAux\ caso\ seja\ convertida,\ null\ caso\ contrario\n
comment12.params=c
comment12.target=java.util.List\ determinadaFilial(ICliente)
comment12.text=\n\ Metodo\ que\ devolve\ a\ lista\ de\ filiais\ de\ determinado\ CLiente\n\ \n\ @return\ \ \ lista\ de\ Filiais\n
comment13.params=mes
comment13.target=java.util.AbstractMap.SimpleEntry\ vendasPorMes(int)
comment13.text=\n\ Metodo\ que,\ dado\ um\ mes,\ calcula\ o\ total\ de\ vendas\ realizadas\ nesse\ mes\ e\ os\ clientes\ que\ as\ realizaram\n\ \n\ @param\ \ mes\ \ \ mes\ a\ analisar\n\ @return\ o\ total\ de\ vendas\ e\ os\ clientes\ que\ as\ realizaram\n
comment14.params=pro
comment14.target=java.util.List\ todosCliComprProd(IProduto)
comment14.text=\n\ Metodo\ que\ devolve\ uma\ lista\ com\ todos\ os\ clientes\ que\ compraram\ um\ determinado\ produto\n\ \n\ @param\ \ pro\ \ \ o\ produto\ a\ ser\ analisado\n\ @return\ \ a\ lista\ com\ todos\ os\ clientes\ que\ compraram\ o\ produto\n
comment15.params=
comment15.target=java.util.Map\ getTop3()
comment15.text=\n\ Metodo\ que\ devolve\ um\ map\ com\ os\ 3\ maiores\ compradores\ na\ filial\ (em\ termos\ de\ dinheiro\ faturado)\n\ \n\ @return\ \ o\ map\ com\ os\ 3\ maiores\ compradores\n
comment16.params=map
comment16.target=ICliente\ cliMenosGasto(java.util.Map)
comment16.text=\n\ Metodo\ que\ devolve\ o\ cliente\ que\ gastou\ menos\ dinheiro,\ dos\ guardados\ num\ map\n\ \n\ @param\ \ map\ \ \ o\ mapa\ a\ analisar\n\ @return\ o\ cliente\n
comment17.params=cli
comment17.target=java.util.List\ numeroProdsDiferentes(ICliente)
comment17.text=\n\ Metodo\ que\ devolve\ uma\ lista\ com\ todos\ os\ diferentes\ produtos\ que\ um\ dado\ cliente\ comprou\n\ @param\ \ cli\ \ \ o\ cliente\ a\ analisar\n\ @return\ \ a\ lista\ com\ os\ produtos\ que\ comprou\n
comment18.params=
comment18.target=ITrioComprasProdGasto\ determinaEstatisticas()
comment18.text=\ \n\ Metodo\ que\ devolve\ um\ triplo\ com\ as\ informacoes\ relativas\ ao\ numero\ total\ de\ compras,\ faturacao\ e\ numero\ de\ clientes\ distintos,\ por\ mes\n\ \n\ @return\ \ o\ triplo\ com\ as\ informacoes\n
comment19.params=
comment19.target=java.util.Set\ clientesCompradores()
comment19.text=\n\ Metodo\ que\ devolve\ todos\ os\ clientes\ que\ compraram\ na\ filial\n\ \n\ @return\ a\ lista\ com\ os\ clientes\n
comment2.params=f1
comment2.target=Filial(java.util.Map)
comment2.text=\n\ Construtor\ para\ objetos\ da\ classe\ Filial\ (parameterizado)\n\ \n\ @param\ \ f1\ \ \ a\ Filial1\n\ \n
comment20.params=
comment20.target=todosProdsEFat()
comment20.text=\n\ Metodo\ que\ determina\ o\ map\ com\ todos\ os\ produtos\ comprados\ na\ filial,\ associados\ ao\ total\ faturado\n\ \n\ @return\ \ o\ map\ com\ os\ produtos\ associados\ aos\ totais\n
comment3.params=f
comment3.target=Filial(Filial)
comment3.text=\n\ Construtor\ para\ objetos\ da\ classe\ Filial\ (de\ copia)\n\ \n\ @param\ \ d\ \ \ o\ Filial\n
comment4.params=
comment4.target=java.util.Map\ getFilial()
comment4.text=\n\ Metodo\ que\ devolve\ a\ filial1\ de\ um\ conjunto\ de\ dados\n\ \n\ @return\ \ \ \ \ a\ filial1\ dos\ dados\n
comment5.params=f
comment5.target=void\ setFilial(java.util.Map)
comment5.text=\n\ Metodo\ que\ altera\ a\ filial1\ de\ um\ conjunto\ de\ cados\n\ \n\ @param\ \ f\ \ \ a\ nova\ filial1\n
comment6.params=
comment6.target=Filial\ clone()
comment6.text=\n\ Metodo\ que\ duplica\ os\ Filial\n\ \n\ @return\ \ \ o\ clone\ dos\ Filial\n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Metodo\ que\ verifica\ se\ dois\ conjuntos\ de\ Filial\ sao\ iguais\n\ \n\ @param\ \ o\ \ \ o\ objeto\ a\ comparar\n\ \n\ @return\ \ \ \ \ o\ resultado\ da\ comparacao\ dos\ objetos\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Metodo\ que\ converte\ um\ conjunto\ de\ Filial\ para\ uma\ string\n\ \n\ @return\ \ \ \ \ o\ conjunto\ de\ Filial\ em\ string\n
comment9.params=
comment9.target=int\ hashCode()
comment9.text=\n\ Metodo\ que\ devolve\ o\ codigo\ de\ hash\ para\ um\ proprietario\n\ \n\ @return\ \ \ \ \ o\ hashcode\n
numComments=21
